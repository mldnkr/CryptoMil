{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/Chart.jsx","components/CryptoDetails.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Exchanges.jsx","components/Homepage.jsx","App.js","app/store.js","index.js"],"names":["Navbar","activeMenu","setActiveMenu","useState","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","Cryptocurrencies","simplified","data","cryptosList","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","console","log","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","uuid","hoverable","title","rank","extra","iconUrl","millify","price","marketCap","style","color","change","Typography","Chart","coinHistory","currentPrice","coinName","coinPrice","coinTimeStamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","Cryptodetails","useParams","settimePeriod","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","supply","total","circulating","symbol","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublished","startOf","fromNow","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","marketShare","id","coinrankingUrl","Homepage","globalStats","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","App","exact","path","CryptoDetails","textAlign","configureStore","reducer","rootElement","document","getElementById","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.b3cb2d9a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined\n} from \"@ant-design/icons\";\nimport icon from \"../images/cryptocurrency.png\";\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(null);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n    return () => window.addEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize < 768) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\">cryptomil</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => setActiveMenu(!activeMenu)}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<MoneyCollectOutlined />}>\n            <Link to=\"/exchanges\">Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to=\"/news\">News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeaders = {\n  \"x-access-token\":\n    \"coinrankinga4249080f5d86c192ae107c51f6d663db885cf03d5c312d1\"\n};\n\nconst baseUrl = \"https://api.coinranking.com/v2\";\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`)\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest(`/exchanges`)\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`)\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timePeriod }) =>\n        createRequest(`/coin/${coinId}/history?timePeriod=${timePeriod}`)\n    })\n  })\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n  useGetExchangesQuery\n} = cryptoApi;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nfunction Loader() {\n  return (\n    <div className=\"loader\">\n      <Spin />\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { useEffect, useState } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\n\nfunction Cryptocurrencies({ simplified }) {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader />;\n\n  console.log(cryptos);\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      )}\n      <Row gutter={[8, 8]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col\n            xs={24}\n            sm={12}\n            lg={6}\n            className=\"crypto-card\"\n            key={currency.rank}\n          >\n            <Link to={`/crypto/${currency.uuid}`}>\n              <Card\n                hoverable\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>\n                  Daily Change:{\" \"}\n                  <span\n                    style={{ color: currency.change < 0 ? \"red\" : \"green\" }}\n                  >\n                    {millify(currency.change)}%\n                  </span>\n                </p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n\nexport default Cryptocurrencies;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nconst { Title } = Typography;\n\nfunction Chart({ coinHistory, currentPrice, coinName }) {\n  const coinPrice = [];\n  const coinTimeStamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\n    coinPrice.push(coinHistory.data.history[i].price);\n    coinTimeStamp.push(\n      new Date(coinHistory.data.history[i].timestamp).toLocaleDateString()\n    );\n  }\n\n  const data = {\n    labels: coinTimeStamp,\n    datasets: [\n      {\n        label: \"Price in USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#0071bd\",\n        borderColor: \"#0071bd\"\n      }\n    ]\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true\n          }\n        }\n      ]\n    }\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName} Price Chart\n        </Title>\n\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            {coinHistory?.data?.change}%\n          </Title>\n          <Title level={5} className=\"currenct-price\">\n            Current {coinName} Price: $ {currentPrice}\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n}\n\nexport default Chart;\n","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\n\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  FundOutlined,\n  DollarCircleOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n  TrophyOutlined,\n  StopOutlined,\n  ExclamationCircleOutlined\n} from \"@ant-design/icons\";\n\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery\n} from \"../services/cryptoApi\";\nimport Chart from \"./Chart\";\nimport Loader from \"./Loader\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nfunction Cryptodetails() {\n  const { coinId } = useParams();\n  const [timePeriod, settimePeriod] = useState(\"7d\");\n\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\n    coinId,\n    timePeriod\n  });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  console.log(coinHistory);\n\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${\n        cryptoDetails[\"24hVolume\"] && millify(cryptoDetails[\"24hVolume\"])\n      }`,\n      icon: <ThunderboltOutlined />\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />\n    }\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${cryptoDetails?.supply?.total}`,\n      icon: <ExclamationCircleOutlined />\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${cryptoDetails?.supply?.circulating}`,\n      icon: <ExclamationCircleOutlined />\n    }\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {cryptoDetails.name}({cryptoDetails.symbol}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in USD View value statistics, market\n          cap and supply\n        </p>\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Time Period\"\n        onChange={(value) => settimePeriod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n      <Chart\n        coinHistory={coinHistory}\n        currentPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p>An overview showing the stats of {cryptoDetails.name}</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Statistics\n            </Title>\n            <p>An overview showing the stats of {cryptoDetails.name}</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails.name}?\n            {HTMLReactParser(cryptoDetails.description)}\n          </Title>\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails.name} Links\n          </Title>\n          {cryptoDetails.links.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">\n                {link.type}\n              </Title>\n              <a href={link.url} target=\"_blank\" rel=\"norefferer\">\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n}\n\nexport default Cryptodetails;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsHeaders = {\n  \"x-bingapis-sdk\": \"true\",\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"d16635816fmsh108dc8f862e2b34p1ca0eejsn27209bc45e10\"\n};\n\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi \",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\n        )\n    })\n  })\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\n\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\n\nimport Loader from \"./Loader\";\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst demoImage =\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\n\nfunction News({ simplified }) {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 12\n  });\n  const { data } = useGetCryptosQuery(100);\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[8, 8]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"childeren\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase.indexOf(input.toLowerCase) > 0\n            }\n          >\n            <option value=\"Cryptocurrency\">Cryptocurrency</option>\n            {data?.data?.coins.map((coin) => (\n              <Option value={coin.name}>{coin.name}</Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={12} key={i}>\n          <Card className=\"news-card\" hoverable>\n            <a href={news.url} target=\"_blank\" rel=\"norefferer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>\n                  {news.name}\n                </Title>\n                <img\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\n                  alt=\"news\"\n                />\n              </div>\n              <p>\n                {news.description > 100\n                  ? `${news.description.substring(0, 100)} ...`\n                  : news.description}\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\n                      demoImage\n                    }\n                    alt=\"\"\n                  />\n                  <Text className=\"provider-name\">\n                    {news.provider[0]?.name}\n                  </Text>\n                </div>\n                <Text>\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                </Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nexport default News;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\n\nimport { useGetExchangesQuery } from \"../services/cryptoApi\";\nimport Loader from \"./Loader\";\nimport Title from \"antd/lib/skeleton/Title\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n\n  const exchangesList = data?.data?.exchanges;\n\n  console.log(data);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text>\n                        <strong>{exchange.rank}.</strong>\n                      </Text>\n                      <Avatar\n                        className=\"exchange-image\"\n                        src={exchange.iconUrl}\n                      />\n                      <Text>\n                        <strong>{exchange.name}</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange[\"24hVolume\"])}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                }\n              >\n                {/* {HTMLReactParser(exchange.coinrankingUrl || \"\")} */}\n                <Text level={5}>Extra Info: </Text>\n                <a\n                  href={exchange.coinrankingUrl}\n                  target=\"_blank\"\n                  rel=\"norefferer\"\n                >\n                  {exchange.coinrankingUrl}\n                </a>\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport { Cryptocurrencies, News } from \"../components\";\n\nimport Loader from \"./Loader\";\n\nconst { Title } = Typography;\n\nfunction Homepage() {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Title className=\"heading\" level={2}>\n        Global Crypto Stats\n      </Title>\n      <Row>\n        <Col span={12}>\n          <Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} />\n        </Col>\n\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={globalStats.totalExchanges}\n          />\n        </Col>\n\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap\"\n            value={millify(globalStats.totalMarketCap)}\n          />\n        </Col>\n\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={millify(globalStats.total24hVolume)}\n          />\n        </Col>\n\n        <Col span={12}>\n          <Statistic\n            title=\"Total Markets\"\n            value={millify(globalStats.totalMarkets)}\n          />\n        </Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies in the world\n        </Title>\n        <Title level={3} className=\"shore-more\">\n          <Link to=\"/cryptocurrencies\">Show more</Link>\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Title>\n        <Title level={3} className=\"shore-more\">\n          <Link to=\"/news\">Show more</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\n\nimport {\n  Exchanges,\n  Homepage,\n  News,\n  Cryptocurrencies,\n  CryptoDetails,\n  Navbar\n} from \"./components\";\nimport \"./App.css\";\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"navbar\">\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/exchanges\">\n              <Exchanges />\n            </Route>\n            <Route exact path=\"/cryptocurrencies\">\n              <Cryptocurrencies />\n            </Route>\n            <Route exact path=\"/crypto/:coinId\">\n              <CryptoDetails />\n            </Route>\n            <Route exact path=\"/news\">\n              <News />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n      <div className=\"footer\">\n        <Typography.Title\n          level={5}\n          style={{ color: \"white\", textAlign: \"center\" }}\n        >\n          Copyright © 2021\n          <br />\n          All Rights Reserved.\n        </Typography.Title>\n        <Space>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/exchanges\">Exchanges</Link>\n          <Link to=\"/news\">News</Link>\n        </Space>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\n  }\n});\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./app/store\";\n\nimport \"antd/dist/antd.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}